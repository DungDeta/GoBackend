version: '3.9'

services:
  #  kafka:
  #    image: bitnami/kafka:3.5
  #    container_name: kafka_container
  #    environment:
  #      - KAFKA_ENABLE_KRAFT=yes
  #      - KAFKA_CFG_NODE_ID=1
  #      - KAFKA_CFG_PROCESS_ROLES=controller,broker
  #      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9094,CONTROLLER://:9095
  #      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9094
  #      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9095
  #      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #      - KAFKA_HEAP_OPTS=-Xmx512M -Xms256M
  #      - KAFKA_KRAFT_CLUSTER_ID=aF3+zO7$wT1~yY1?cC7,qW
  #      - ALLOW_PLAINTEXT_LISTENER=yes
  #      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  #      - KAFKA_BROKER_ID=1
  #    ports:
  #      - "19094:9094"
  #      - "19095:9095"
  #    volumes:
  #      - ./kafka/broker1:/bitnami/kafka:rw
  #    restart: unless-stopped
  #    networks:
  #      - backend_network
  #
  #  kafka-ui:
  #    image: provectuslabs/kafka-ui:latest
  #    container_name: kafka-ui_container
  #    environment:
  #      - KAFKA_CLUSTERS_0_NAME=local
  #      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9094  # Sử dụng tên service "kafka"
  #    ports:
  #      - "9090:8080"
  #    depends_on:
  #      - kafka
  #    restart: unless-stopped
  #    networks:
  #      - backend_network

  mysql:
    image: mysql:8.0
    container_name: mysql_container
    environment:
      - MYSQL_ROOT_PASSWORD=root1234
      - MYSQL_DATABASE=shopdevgo
      - MYSQL_PASSWORD=root1234
    ports:
      - "33306:3306"
    volumes:
      - ./data/mysql_data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - pre-go-local-network

  redis:
    image: redis:7.0
    container_name: redis_container
    ports:
      - "6331:6379"
    volumes:
      - ./data/redis_data:/data
    restart: unless-stopped
    networks:
      - pre-go-local-network
  prometheus:
    image: prom/prometheus:latest
    container_name: pre-event-prometheus
    ports:
      - "9092:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus_data:/prometheus
    restart: unless-stopped
    extra_hosts:
      - host.docker.internal:host-gateway
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - pre-go-local-network
  grafana:
    image: grafana/grafana:latest
    container_name: pre-event-grafana
    hostname: grafana
    ports:
      - "3002:3000"
    environment:
        - GF_SECURITY_ADMIN_PASSWORD=admin
        - GF_USERS_ALLOW_SIGN_UP=false
        - GF_SERVER_DOMAIN=localhost
        - GF_LOG_MODE=console file
        - GF_LOG_FILTERS = alerting.notifier.slack:debug alermanager:debug ngalert:debug
    volumes:
      - ./grafana-storage:/var/lib/grafana
    restart: unless-stopped
    networks:
      - pre-go-local-network
networks:
  pre-go-local-network:
    driver: bridge
